// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GroupListItem DOM Rendering handles a broken imgLink correctly 1`] = `
<div>
  <li
    className="row"
  >
    <div
      className="participantWrapper"
    >
      <div
        className="flag"
        onClick={[MockFunction]}
      >
        <img
          onError={[Function]}
          role="presentation"
          src="assets/icons/incorrecturl.svg"
        />
      </div>
      <span
        className="participant"
        onClick={[MockFunction]}
      >
        Uruguay
      </span>
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811235,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848420,
            "label": "Uruguay",
            "odds": 2100,
            "oddsAmerican": "110",
            "oddsFractional": "11/10",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811236,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848422,
            "label": "Uruguay",
            "odds": 1180,
            "oddsAmerican": "-590",
            "oddsFractional": "1/6",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
  </li>
</div>
`;

exports[`GroupListItem DOM Rendering handles only receiving one outcome per participant 1`] = `
<div>
  <li
    className="row"
  >
    <div
      className="participantWrapper"
    >
      <div
        className="flag"
        onClick={[MockFunction]}
      >
        <img
          onError={[Function]}
          role="presentation"
          src="assets/icons/incorrecturl.svg"
        />
      </div>
      <span
        className="participant"
        onClick={[MockFunction]}
      >
        Uruguay
      </span>
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811235,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848420,
            "label": "Uruguay",
            "odds": 2100,
            "oddsAmerican": "110",
            "oddsFractional": "11/10",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811236,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848422,
            "label": "Uruguay",
            "odds": 1180,
            "oddsAmerican": "-590",
            "oddsFractional": "1/6",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
  </li>
</div>
`;

exports[`GroupListItem DOM Rendering renders correctly 1`] = `
<div>
  <li
    className="row"
  >
    <div
      className="participantWrapper"
    >
      <div
        className="flag"
        onClick={[MockFunction]}
      >
        <img
          onError={[Function]}
          role="presentation"
          src="assets/icons/uruguay.svg"
        />
      </div>
      <span
        className="participant"
        onClick={[MockFunction]}
      >
        Uruguay
      </span>
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811235,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848420,
            "label": "Uruguay",
            "odds": 2100,
            "oddsAmerican": "110",
            "oddsFractional": "11/10",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811236,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848422,
            "label": "Uruguay",
            "odds": 1180,
            "oddsAmerican": "-590",
            "oddsFractional": "1/6",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
  </li>
</div>
`;

exports[`GroupListItem DOM Rendering renders correctly withouth flagUrl 1`] = `
<div>
  <li
    className="row"
  >
    <div
      className="participantWrapper"
    >
      <span
        className="participant"
        onClick={[MockFunction]}
      >
        Uruguay
      </span>
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811235,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848420,
            "label": "Uruguay",
            "odds": 2100,
            "oddsAmerican": "110",
            "oddsFractional": "11/10",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
    <div
      className="button"
    >
      <OutcomeButton
        label={false}
        outcome={
          Object {
            "betOfferId": 2104811236,
            "changedDate": "2018-02-07T11:55:05Z",
            "englishLabel": "Uruguay",
            "id": 2373848422,
            "label": "Uruguay",
            "odds": 1180,
            "oddsAmerican": "-590",
            "oddsFractional": "1/6",
            "participant": "Uruguay",
            "participantId": 1000000155,
            "status": "OPEN",
            "type": "OT_UNTYPED",
          }
        }
        outlineStyle={true}
      />
    </div>
  </li>
</div>
`;
